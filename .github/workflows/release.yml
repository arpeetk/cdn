name: Create a release
on:
  push:
    branches: [ main ]
    paths:
    - '**/frontend-app/**'
jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod    
    steps:
      - uses: actions/checkout@v2
      
      - name: Install dependencies
        run: yarn
        working-directory: frontend-app

      - name: Build
        run: yarn build
        working-directory: frontend-app

      - name: Test
        run: yarn test
        working-directory: frontend-app
        
        # Todo: Logic can be added to decide whether to bump
        # major, minor or patch versions based on files.
        # For eg. API change is a major version change.
        # However, this is a static site so those decisions make look different.
        # For now, assuming that it's always a major version change.
        # Alternatively, the engineers could simply update the package.json
        # and this workflow will be triggered based on changes to package.json
      - name: Bump Version
        run: |
        
        working-directory: frontend-app
      
      - name: Create a release
        run: |
          git config user.name "GitHub Actions Workflow"
          git config user.email "<>"
          npm version major
          
          # Acquire version using package.json
          PACKAGE_VERSION=$(cat package.json \
          | grep version \
          | head -1 \
          | awk -F: '{ print $2 }' \
          | sed 's/[",]//g' \
          | tr -d '[[:space:]]')
          
          # Push update package version
          git add package.json
          git commit -m "Bump version $PACKAGE_VERSION"
          git push -f
          
          # Create a tar.gz artifact
          tar -cvzf frontend-app.tar.gz build/*
          
          # Create a release and upload the artifact
          gh release create $PACKAGE_VERSION frontend-app.tar.gz
        working-directory: frontend-app
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
